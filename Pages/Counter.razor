@page "/counter/{currentCountParamter?}"
@inject ILogger<Counter> logger;

<PageTitle>Counter</PageTitle>


<ModuleTitle nombreTitulo="Contador titulo"></ModuleTitle>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {

    private int currentCount = 0;

    [Parameter]
    public string currentCountParamter {get; set;}

    [SupplyParameterFromQuery]
    [Parameter]
    public string? CounterFromQuery {get;set;}

    public override async Task SetParametersAsync(ParameterView parameters){
        
        if(parameters.TryGetValue<string>(nameof(currentCountParamter),out var value)){
            if(value is not null){
                 currentCountParamter = value;
            }
        }

        await base.SetParametersAsync(parameters);
    }
    
    protected override void OnParametersSet(){
        logger.LogInformation("Se envian los parametros");
    }

    protected override void OnInitialized(){
        @* currentCount = currentCountParamter!= null ? int.Parse(currentCountParamter): 0; *@
        currentCount = CounterFromQuery!= null ? int.Parse(CounterFromQuery): 0;
        logger.LogInformation("Se inicia el componente");
    }
    
    protected override void OnAfterRender(bool firstRender){
        logger.LogInformation("Esto ocurre despues de iniciar el componente");
    }
    private void IncrementCount()
    {
        currentCount++;
    }
}
